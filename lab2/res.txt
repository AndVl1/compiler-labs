     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: example.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: example.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 4) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: example.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: example.go:3:8
    14  .  .  .  Specs: []ast.Spec (len = 4) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: example.go:4:2
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"fmt\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  .  1: *ast.ImportSpec {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Name: nil
    29  .  .  .  .  .  Path: *ast.BasicLit {
    30  .  .  .  .  .  .  ValuePos: example.go:5:2
    31  .  .  .  .  .  .  Kind: STRING
    32  .  .  .  .  .  .  Value: "\"log\""
    33  .  .  .  .  .  }
    34  .  .  .  .  .  Comment: nil
    35  .  .  .  .  .  EndPos: -
    36  .  .  .  .  }
    37  .  .  .  .  2: *ast.ImportSpec {
    38  .  .  .  .  .  Doc: nil
    39  .  .  .  .  .  Name: nil
    40  .  .  .  .  .  Path: *ast.BasicLit {
    41  .  .  .  .  .  .  ValuePos: example.go:6:2
    42  .  .  .  .  .  .  Kind: STRING
    43  .  .  .  .  .  .  Value: "\"runtime\""
    44  .  .  .  .  .  }
    45  .  .  .  .  .  Comment: nil
    46  .  .  .  .  .  EndPos: -
    47  .  .  .  .  }
    48  .  .  .  .  3: *ast.ImportSpec {
    49  .  .  .  .  .  Doc: nil
    50  .  .  .  .  .  Name: nil
    51  .  .  .  .  .  Path: *ast.BasicLit {
    52  .  .  .  .  .  .  ValuePos: example.go:7:2
    53  .  .  .  .  .  .  Kind: STRING
    54  .  .  .  .  .  .  Value: "\"time\""
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Comment: nil
    57  .  .  .  .  .  EndPos: -
    58  .  .  .  .  }
    59  .  .  .  }
    60  .  .  .  Rparen: example.go:8:1
    61  .  .  }
    62  .  .  1: *ast.GenDecl {
    63  .  .  .  Doc: nil
    64  .  .  .  TokPos: example.go:10:1
    65  .  .  .  Tok: type
    66  .  .  .  Lparen: -
    67  .  .  .  Specs: []ast.Spec (len = 1) {
    68  .  .  .  .  0: *ast.TypeSpec {
    69  .  .  .  .  .  Doc: nil
    70  .  .  .  .  .  Name: *ast.Ident {
    71  .  .  .  .  .  .  NamePos: example.go:10:6
    72  .  .  .  .  .  .  Name: "chs"
    73  .  .  .  .  .  .  Obj: *ast.Object {
    74  .  .  .  .  .  .  .  Kind: type
    75  .  .  .  .  .  .  .  Name: "chs"
    76  .  .  .  .  .  .  .  Decl: *(obj @ 68)
    77  .  .  .  .  .  .  .  Data: nil
    78  .  .  .  .  .  .  .  Type: nil
    79  .  .  .  .  .  .  }
    80  .  .  .  .  .  }
    81  .  .  .  .  .  Assign: -
    82  .  .  .  .  .  Type: *ast.ChanType {
    83  .  .  .  .  .  .  Begin: example.go:10:10
    84  .  .  .  .  .  .  Arrow: -
    85  .  .  .  .  .  .  Dir: 3
    86  .  .  .  .  .  .  Value: *ast.Ident {
    87  .  .  .  .  .  .  .  NamePos: example.go:10:15
    88  .  .  .  .  .  .  .  Name: "string"
    89  .  .  .  .  .  .  .  Obj: nil
    90  .  .  .  .  .  .  }
    91  .  .  .  .  .  }
    92  .  .  .  .  .  Comment: nil
    93  .  .  .  .  }
    94  .  .  .  }
    95  .  .  .  Rparen: -
    96  .  .  }
    97  .  .  2: *ast.FuncDecl {
    98  .  .  .  Doc: nil
    99  .  .  .  Recv: nil
   100  .  .  .  Name: *ast.Ident {
   101  .  .  .  .  NamePos: example.go:12:6
   102  .  .  .  .  Name: "main"
   103  .  .  .  .  Obj: *ast.Object {
   104  .  .  .  .  .  Kind: func
   105  .  .  .  .  .  Name: "main"
   106  .  .  .  .  .  Decl: *(obj @ 97)
   107  .  .  .  .  .  Data: nil
   108  .  .  .  .  .  Type: nil
   109  .  .  .  .  }
   110  .  .  .  }
   111  .  .  .  Type: *ast.FuncType {
   112  .  .  .  .  Func: example.go:12:1
   113  .  .  .  .  Params: *ast.FieldList {
   114  .  .  .  .  .  Opening: example.go:12:10
   115  .  .  .  .  .  List: nil
   116  .  .  .  .  .  Closing: example.go:12:11
   117  .  .  .  .  }
   118  .  .  .  .  Results: nil
   119  .  .  .  }
   120  .  .  .  Body: *ast.BlockStmt {
   121  .  .  .  .  Lbrace: example.go:12:13
   122  .  .  .  .  List: []ast.Stmt (len = 4) {
   123  .  .  .  .  .  0: *ast.ExprStmt {
   124  .  .  .  .  .  .  X: *ast.CallExpr {
   125  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   126  .  .  .  .  .  .  .  .  X: *ast.Ident {
   127  .  .  .  .  .  .  .  .  .  NamePos: example.go:13:2
   128  .  .  .  .  .  .  .  .  .  Name: "runtime"
   129  .  .  .  .  .  .  .  .  .  Obj: nil
   130  .  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   132  .  .  .  .  .  .  .  .  .  NamePos: example.go:13:10
   133  .  .  .  .  .  .  .  .  .  Name: "GOMAXPROCS"
   134  .  .  .  .  .  .  .  .  .  Obj: nil
   135  .  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  Lparen: example.go:13:20
   138  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   139  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   140  .  .  .  .  .  .  .  .  .  ValuePos: example.go:13:21
   141  .  .  .  .  .  .  .  .  .  Kind: INT
   142  .  .  .  .  .  .  .  .  .  Value: "2"
   143  .  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  }
   145  .  .  .  .  .  .  .  Ellipsis: -
   146  .  .  .  .  .  .  .  Rparen: example.go:13:22
   147  .  .  .  .  .  .  }
   148  .  .  .  .  .  }
   149  .  .  .  .  .  1: *ast.AssignStmt {
   150  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   151  .  .  .  .  .  .  .  0: *ast.Ident {
   152  .  .  .  .  .  .  .  .  NamePos: example.go:14:2
   153  .  .  .  .  .  .  .  .  Name: "result"
   154  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   155  .  .  .  .  .  .  .  .  .  Kind: var
   156  .  .  .  .  .  .  .  .  .  Name: "result"
   157  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 149)
   158  .  .  .  .  .  .  .  .  .  Data: nil
   159  .  .  .  .  .  .  .  .  .  Type: nil
   160  .  .  .  .  .  .  .  .  }
   161  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  TokPos: example.go:14:9
   164  .  .  .  .  .  .  Tok: :=
   165  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   166  .  .  .  .  .  .  .  0: *ast.CallExpr {
   167  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   168  .  .  .  .  .  .  .  .  .  NamePos: example.go:14:12
   169  .  .  .  .  .  .  .  .  .  Name: "make"
   170  .  .  .  .  .  .  .  .  .  Obj: nil
   171  .  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  .  Lparen: example.go:14:16
   173  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   174  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   175  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:14:17
   176  .  .  .  .  .  .  .  .  .  .  Name: "chs"
   177  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   178  .  .  .  .  .  .  .  .  .  }
   179  .  .  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  .  .  Ellipsis: -
   181  .  .  .  .  .  .  .  .  Rparen: example.go:14:20
   182  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  }
   184  .  .  .  .  .  }
   185  .  .  .  .  .  2: *ast.ForStmt {
   186  .  .  .  .  .  .  For: example.go:15:2
   187  .  .  .  .  .  .  Init: *ast.AssignStmt {
   188  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   189  .  .  .  .  .  .  .  .  0: *ast.Ident {
   190  .  .  .  .  .  .  .  .  .  NamePos: example.go:15:6
   191  .  .  .  .  .  .  .  .  .  Name: "i"
   192  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   193  .  .  .  .  .  .  .  .  .  .  Kind: var
   194  .  .  .  .  .  .  .  .  .  .  Name: "i"
   195  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 187)
   196  .  .  .  .  .  .  .  .  .  .  Data: nil
   197  .  .  .  .  .  .  .  .  .  .  Type: nil
   198  .  .  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  TokPos: example.go:15:8
   202  .  .  .  .  .  .  .  Tok: :=
   203  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   204  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   205  .  .  .  .  .  .  .  .  .  ValuePos: example.go:15:11
   206  .  .  .  .  .  .  .  .  .  Kind: INT
   207  .  .  .  .  .  .  .  .  .  Value: "0"
   208  .  .  .  .  .  .  .  .  }
   209  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   212  .  .  .  .  .  .  .  X: *ast.Ident {
   213  .  .  .  .  .  .  .  .  NamePos: example.go:15:14
   214  .  .  .  .  .  .  .  .  Name: "i"
   215  .  .  .  .  .  .  .  .  Obj: *(obj @ 192)
   216  .  .  .  .  .  .  .  }
   217  .  .  .  .  .  .  .  OpPos: example.go:15:16
   218  .  .  .  .  .  .  .  Op: <
   219  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   220  .  .  .  .  .  .  .  .  ValuePos: example.go:15:18
   221  .  .  .  .  .  .  .  .  Kind: INT
   222  .  .  .  .  .  .  .  .  Value: "5"
   223  .  .  .  .  .  .  .  }
   224  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   226  .  .  .  .  .  .  .  X: *ast.Ident {
   227  .  .  .  .  .  .  .  .  NamePos: example.go:15:21
   228  .  .  .  .  .  .  .  .  Name: "i"
   229  .  .  .  .  .  .  .  .  Obj: *(obj @ 192)
   230  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  .  TokPos: example.go:15:22
   232  .  .  .  .  .  .  .  Tok: ++
   233  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  Body: *ast.BlockStmt {
   235  .  .  .  .  .  .  .  Lbrace: example.go:15:25
   236  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   237  .  .  .  .  .  .  .  .  0: *ast.GoStmt {
   238  .  .  .  .  .  .  .  .  .  Go: example.go:16:3
   239  .  .  .  .  .  .  .  .  .  Call: *ast.CallExpr {
   240  .  .  .  .  .  .  .  .  .  .  Fun: *ast.FuncLit {
   241  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   242  .  .  .  .  .  .  .  .  .  .  .  .  Func: example.go:16:6
   243  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   244  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:16:10
   245  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:16:11
   251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 246)
   256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:16:13
   263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   264  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   267  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   268  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   270  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:16:16
   271  .  .  .  .  .  .  .  .  .  .  .  .  }
   272  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil
   273  .  .  .  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   275  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:16:18
   276  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   277  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   281  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:17:4
   282  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   285  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:17:8
   287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:17:15
   292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:17:16
   295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
   297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:17:17
   301  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   303  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {
   304  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   305  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   306  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   307  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:18:4
   308  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   309  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 154)
   310  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   311  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   312  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:18:11
   313  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "StartPinging"
   314  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   315  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   317  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:18:23
   318  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   319  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   320  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:18:24
   321  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   322  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
   323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:18:27
   326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"www.google.com\""
   328  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:18:43
   332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  .  .  .  .  .  }
   335  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:19:3
   336  .  .  .  .  .  .  .  .  .  .  .  }
   337  .  .  .  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:19:4
   339  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   340  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   341  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:19:5
   342  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   343  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 192)
   344  .  .  .  .  .  .  .  .  .  .  .  }
   345  .  .  .  .  .  .  .  .  .  .  }
   346  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   347  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:19:6
   348  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  Rbrace: example.go:20:2
   352  .  .  .  .  .  .  }
   353  .  .  .  .  .  }
   354  .  .  .  .  .  3: *ast.ForStmt {
   355  .  .  .  .  .  .  For: example.go:21:2
   356  .  .  .  .  .  .  Init: *ast.AssignStmt {
   357  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   358  .  .  .  .  .  .  .  .  0: *ast.Ident {
   359  .  .  .  .  .  .  .  .  .  NamePos: example.go:21:6
   360  .  .  .  .  .  .  .  .  .  Name: "i"
   361  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   362  .  .  .  .  .  .  .  .  .  .  Kind: var
   363  .  .  .  .  .  .  .  .  .  .  Name: "i"
   364  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 356)
   365  .  .  .  .  .  .  .  .  .  .  Data: nil
   366  .  .  .  .  .  .  .  .  .  .  Type: nil
   367  .  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  }
   370  .  .  .  .  .  .  .  TokPos: example.go:21:8
   371  .  .  .  .  .  .  .  Tok: :=
   372  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   373  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   374  .  .  .  .  .  .  .  .  .  ValuePos: example.go:21:11
   375  .  .  .  .  .  .  .  .  .  Kind: INT
   376  .  .  .  .  .  .  .  .  .  Value: "0"
   377  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  }
   380  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   381  .  .  .  .  .  .  .  X: *ast.Ident {
   382  .  .  .  .  .  .  .  .  NamePos: example.go:21:14
   383  .  .  .  .  .  .  .  .  Name: "i"
   384  .  .  .  .  .  .  .  .  Obj: *(obj @ 361)
   385  .  .  .  .  .  .  .  }
   386  .  .  .  .  .  .  .  OpPos: example.go:21:16
   387  .  .  .  .  .  .  .  Op: <
   388  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   389  .  .  .  .  .  .  .  .  ValuePos: example.go:21:18
   390  .  .  .  .  .  .  .  .  Kind: INT
   391  .  .  .  .  .  .  .  .  Value: "5"
   392  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  }
   394  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   395  .  .  .  .  .  .  .  X: *ast.Ident {
   396  .  .  .  .  .  .  .  .  NamePos: example.go:21:21
   397  .  .  .  .  .  .  .  .  Name: "i"
   398  .  .  .  .  .  .  .  .  Obj: *(obj @ 361)
   399  .  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  .  TokPos: example.go:21:22
   401  .  .  .  .  .  .  .  Tok: ++
   402  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  Body: *ast.BlockStmt {
   404  .  .  .  .  .  .  .  Lbrace: example.go:21:25
   405  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   406  .  .  .  .  .  .  .  .  0: *ast.SelectStmt {
   407  .  .  .  .  .  .  .  .  .  Select: example.go:22:3
   408  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   409  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:22:10
   410  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   411  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CommClause {
   412  .  .  .  .  .  .  .  .  .  .  .  .  Case: example.go:23:3
   413  .  .  .  .  .  .  .  .  .  .  .  .  Comm: *ast.AssignStmt {
   414  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:23:8
   417  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
   418  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   420  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
   421  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 413)
   422  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   423  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   424  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: example.go:23:12
   428  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   429  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   430  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   431  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:23:15
   432  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: <-
   433  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   434  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:23:17
   435  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
   436  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 154)
   437  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   440  .  .  .  .  .  .  .  .  .  .  .  .  }
   441  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:23:23
   442  .  .  .  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   443  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   444  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:24:4
   448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:24:8
   453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:24:15
   458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:24:16
   461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
   462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 418)
   463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:24:19
   467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   468  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  .  .  .  .  .  }
   471  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CommClause {
   472  .  .  .  .  .  .  .  .  .  .  .  .  Case: example.go:25:3
   473  .  .  .  .  .  .  .  .  .  .  .  .  Comm: *ast.ExprStmt {
   474  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.UnaryExpr {
   475  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:25:8
   476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: <-
   477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   478  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   479  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   480  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:25:10
   481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "time"
   482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   483  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:25:15
   486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "After"
   487  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:25:20
   491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:25:21
   495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "10"
   497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:25:24
   499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: *
   500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
   501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:25:26
   503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "time"
   504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:25:31
   508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Second"
   509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   515  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:25:37
   516  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   517  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:25:38
   520  .  .  .  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 2) {
   521  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   522  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   523  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:26:4
   526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:26:8
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:26:15
   536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:26:16
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Timed out\""
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:26:27
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: example.go:27:4
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   551  .  .  .  .  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:28:3
   555  .  .  .  .  .  .  .  .  .  }
   556  .  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  Rbrace: example.go:29:2
   559  .  .  .  .  .  .  }
   560  .  .  .  .  .  }
   561  .  .  .  .  }
   562  .  .  .  .  Rbrace: example.go:30:1
   563  .  .  .  }
   564  .  .  }
   565  .  .  3: *ast.FuncDecl {
   566  .  .  .  Doc: nil
   567  .  .  .  Recv: *ast.FieldList {
   568  .  .  .  .  Opening: example.go:32:6
   569  .  .  .  .  List: []*ast.Field (len = 1) {
   570  .  .  .  .  .  0: *ast.Field {
   571  .  .  .  .  .  .  Doc: nil
   572  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   573  .  .  .  .  .  .  .  0: *ast.Ident {
   574  .  .  .  .  .  .  .  .  NamePos: example.go:32:7
   575  .  .  .  .  .  .  .  .  Name: "result"
   576  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   577  .  .  .  .  .  .  .  .  .  Kind: var
   578  .  .  .  .  .  .  .  .  .  Name: "result"
   579  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 570)
   580  .  .  .  .  .  .  .  .  .  Data: nil
   581  .  .  .  .  .  .  .  .  .  Type: nil
   582  .  .  .  .  .  .  .  .  }
   583  .  .  .  .  .  .  .  }
   584  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  Type: *ast.StarExpr {
   586  .  .  .  .  .  .  .  Star: example.go:32:14
   587  .  .  .  .  .  .  .  X: *ast.Ident {
   588  .  .  .  .  .  .  .  .  NamePos: example.go:32:15
   589  .  .  .  .  .  .  .  .  Name: "chs"
   590  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   591  .  .  .  .  .  .  .  }
   592  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  Tag: nil
   594  .  .  .  .  .  .  Comment: nil
   595  .  .  .  .  .  }
   596  .  .  .  .  }
   597  .  .  .  .  Closing: example.go:32:18
   598  .  .  .  }
   599  .  .  .  Name: *ast.Ident {
   600  .  .  .  .  NamePos: example.go:32:20
   601  .  .  .  .  Name: "StartPinging"
   602  .  .  .  .  Obj: nil
   603  .  .  .  }
   604  .  .  .  Type: *ast.FuncType {
   605  .  .  .  .  Func: example.go:32:1
   606  .  .  .  .  Params: *ast.FieldList {
   607  .  .  .  .  .  Opening: example.go:32:32
   608  .  .  .  .  .  List: []*ast.Field (len = 2) {
   609  .  .  .  .  .  .  0: *ast.Field {
   610  .  .  .  .  .  .  .  Doc: nil
   611  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   612  .  .  .  .  .  .  .  .  0: *ast.Ident {
   613  .  .  .  .  .  .  .  .  .  NamePos: example.go:32:33
   614  .  .  .  .  .  .  .  .  .  Name: "i"
   615  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   616  .  .  .  .  .  .  .  .  .  .  Kind: var
   617  .  .  .  .  .  .  .  .  .  .  Name: "i"
   618  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 609)
   619  .  .  .  .  .  .  .  .  .  .  Data: nil
   620  .  .  .  .  .  .  .  .  .  .  Type: nil
   621  .  .  .  .  .  .  .  .  .  }
   622  .  .  .  .  .  .  .  .  }
   623  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  Type: *ast.Ident {
   625  .  .  .  .  .  .  .  .  NamePos: example.go:32:35
   626  .  .  .  .  .  .  .  .  Name: "int"
   627  .  .  .  .  .  .  .  .  Obj: nil
   628  .  .  .  .  .  .  .  }
   629  .  .  .  .  .  .  .  Tag: nil
   630  .  .  .  .  .  .  .  Comment: nil
   631  .  .  .  .  .  .  }
   632  .  .  .  .  .  .  1: *ast.Field {
   633  .  .  .  .  .  .  .  Doc: nil
   634  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   635  .  .  .  .  .  .  .  .  0: *ast.Ident {
   636  .  .  .  .  .  .  .  .  .  NamePos: example.go:32:40
   637  .  .  .  .  .  .  .  .  .  Name: "addr"
   638  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   639  .  .  .  .  .  .  .  .  .  .  Kind: var
   640  .  .  .  .  .  .  .  .  .  .  Name: "addr"
   641  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 632)
   642  .  .  .  .  .  .  .  .  .  .  Data: nil
   643  .  .  .  .  .  .  .  .  .  .  Type: nil
   644  .  .  .  .  .  .  .  .  .  }
   645  .  .  .  .  .  .  .  .  }
   646  .  .  .  .  .  .  .  }
   647  .  .  .  .  .  .  .  Type: *ast.Ident {
   648  .  .  .  .  .  .  .  .  NamePos: example.go:32:45
   649  .  .  .  .  .  .  .  .  Name: "string"
   650  .  .  .  .  .  .  .  .  Obj: nil
   651  .  .  .  .  .  .  .  }
   652  .  .  .  .  .  .  .  Tag: nil
   653  .  .  .  .  .  .  .  Comment: nil
   654  .  .  .  .  .  .  }
   655  .  .  .  .  .  }
   656  .  .  .  .  .  Closing: example.go:32:51
   657  .  .  .  .  }
   658  .  .  .  .  Results: nil
   659  .  .  .  }
   660  .  .  .  Body: *ast.BlockStmt {
   661  .  .  .  .  Lbrace: example.go:32:53
   662  .  .  .  .  List: []ast.Stmt (len = 9) {
   663  .  .  .  .  .  0: *ast.ExprStmt {
   664  .  .  .  .  .  .  X: *ast.CallExpr {
   665  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   666  .  .  .  .  .  .  .  .  X: *ast.Ident {
   667  .  .  .  .  .  .  .  .  .  NamePos: example.go:33:2
   668  .  .  .  .  .  .  .  .  .  Name: "fmt"
   669  .  .  .  .  .  .  .  .  .  Obj: nil
   670  .  .  .  .  .  .  .  .  }
   671  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   672  .  .  .  .  .  .  .  .  .  NamePos: example.go:33:6
   673  .  .  .  .  .  .  .  .  .  Name: "Println"
   674  .  .  .  .  .  .  .  .  .  Obj: nil
   675  .  .  .  .  .  .  .  .  }
   676  .  .  .  .  .  .  .  }
   677  .  .  .  .  .  .  .  Lparen: example.go:33:13
   678  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   679  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   680  .  .  .  .  .  .  .  .  .  ValuePos: example.go:33:14
   681  .  .  .  .  .  .  .  .  .  Kind: STRING
   682  .  .  .  .  .  .  .  .  .  Value: "\"pinging...\""
   683  .  .  .  .  .  .  .  .  }
   684  .  .  .  .  .  .  .  }
   685  .  .  .  .  .  .  .  Ellipsis: -
   686  .  .  .  .  .  .  .  Rparen: example.go:33:26
   687  .  .  .  .  .  .  }
   688  .  .  .  .  .  }
   689  .  .  .  .  .  1: *ast.AssignStmt {
   690  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   691  .  .  .  .  .  .  .  0: *ast.Ident {
   692  .  .  .  .  .  .  .  .  NamePos: example.go:34:2
   693  .  .  .  .  .  .  .  .  Name: "pinger"
   694  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   695  .  .  .  .  .  .  .  .  .  Kind: var
   696  .  .  .  .  .  .  .  .  .  Name: "pinger"
   697  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 689)
   698  .  .  .  .  .  .  .  .  .  Data: nil
   699  .  .  .  .  .  .  .  .  .  Type: nil
   700  .  .  .  .  .  .  .  .  }
   701  .  .  .  .  .  .  .  }
   702  .  .  .  .  .  .  .  1: *ast.Ident {
   703  .  .  .  .  .  .  .  .  NamePos: example.go:34:10
   704  .  .  .  .  .  .  .  .  Name: "err"
   705  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   706  .  .  .  .  .  .  .  .  .  Kind: var
   707  .  .  .  .  .  .  .  .  .  Name: "err"
   708  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 689)
   709  .  .  .  .  .  .  .  .  .  Data: nil
   710  .  .  .  .  .  .  .  .  .  Type: nil
   711  .  .  .  .  .  .  .  .  }
   712  .  .  .  .  .  .  .  }
   713  .  .  .  .  .  .  }
   714  .  .  .  .  .  .  TokPos: example.go:34:14
   715  .  .  .  .  .  .  Tok: :=
   716  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   717  .  .  .  .  .  .  .  0: *ast.CallExpr {
   718  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   719  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   720  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:34:17
   721  .  .  .  .  .  .  .  .  .  .  Name: "ping"
   722  .  .  .  .  .  .  .  .  .  .  Obj: nil
   723  .  .  .  .  .  .  .  .  .  }
   724  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   725  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:34:22
   726  .  .  .  .  .  .  .  .  .  .  Name: "NewPinger"
   727  .  .  .  .  .  .  .  .  .  .  Obj: nil
   728  .  .  .  .  .  .  .  .  .  }
   729  .  .  .  .  .  .  .  .  }
   730  .  .  .  .  .  .  .  .  Lparen: example.go:34:31
   731  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   732  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   733  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:34:32
   734  .  .  .  .  .  .  .  .  .  .  Name: "addr"
   735  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 638)
   736  .  .  .  .  .  .  .  .  .  }
   737  .  .  .  .  .  .  .  .  }
   738  .  .  .  .  .  .  .  .  Ellipsis: -
   739  .  .  .  .  .  .  .  .  Rparen: example.go:34:36
   740  .  .  .  .  .  .  .  }
   741  .  .  .  .  .  .  }
   742  .  .  .  .  .  }
   743  .  .  .  .  .  2: *ast.IfStmt {
   744  .  .  .  .  .  .  If: example.go:35:2
   745  .  .  .  .  .  .  Init: nil
   746  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   747  .  .  .  .  .  .  .  X: *ast.Ident {
   748  .  .  .  .  .  .  .  .  NamePos: example.go:35:5
   749  .  .  .  .  .  .  .  .  Name: "err"
   750  .  .  .  .  .  .  .  .  Obj: *(obj @ 705)
   751  .  .  .  .  .  .  .  }
   752  .  .  .  .  .  .  .  OpPos: example.go:35:9
   753  .  .  .  .  .  .  .  Op: !=
   754  .  .  .  .  .  .  .  Y: *ast.Ident {
   755  .  .  .  .  .  .  .  .  NamePos: example.go:35:12
   756  .  .  .  .  .  .  .  .  Name: "nil"
   757  .  .  .  .  .  .  .  .  Obj: nil
   758  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  }
   760  .  .  .  .  .  .  Body: *ast.BlockStmt {
   761  .  .  .  .  .  .  .  Lbrace: example.go:35:16
   762  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   763  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   764  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   765  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   766  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   767  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:36:3
   768  .  .  .  .  .  .  .  .  .  .  .  .  Name: "log"
   769  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   770  .  .  .  .  .  .  .  .  .  .  .  }
   771  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   772  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:36:7
   773  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   774  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   775  .  .  .  .  .  .  .  .  .  .  .  }
   776  .  .  .  .  .  .  .  .  .  .  }
   777  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:36:14
   778  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   779  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   780  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:36:15
   781  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   782  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 705)
   783  .  .  .  .  .  .  .  .  .  .  .  }
   784  .  .  .  .  .  .  .  .  .  .  }
   785  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   786  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:36:18
   787  .  .  .  .  .  .  .  .  .  }
   788  .  .  .  .  .  .  .  .  }
   789  .  .  .  .  .  .  .  }
   790  .  .  .  .  .  .  .  Rbrace: example.go:37:2
   791  .  .  .  .  .  .  }
   792  .  .  .  .  .  .  Else: nil
   793  .  .  .  .  .  }
   794  .  .  .  .  .  3: *ast.AssignStmt {
   795  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   796  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   797  .  .  .  .  .  .  .  .  X: *ast.Ident {
   798  .  .  .  .  .  .  .  .  .  NamePos: example.go:39:2
   799  .  .  .  .  .  .  .  .  .  Name: "pinger"
   800  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
   801  .  .  .  .  .  .  .  .  }
   802  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   803  .  .  .  .  .  .  .  .  .  NamePos: example.go:39:9
   804  .  .  .  .  .  .  .  .  .  Name: "OnRecv"
   805  .  .  .  .  .  .  .  .  .  Obj: nil
   806  .  .  .  .  .  .  .  .  }
   807  .  .  .  .  .  .  .  }
   808  .  .  .  .  .  .  }
   809  .  .  .  .  .  .  TokPos: example.go:39:16
   810  .  .  .  .  .  .  Tok: =
   811  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   812  .  .  .  .  .  .  .  0: *ast.FuncLit {
   813  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   814  .  .  .  .  .  .  .  .  .  Func: example.go:39:18
   815  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   816  .  .  .  .  .  .  .  .  .  .  Opening: example.go:39:22
   817  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   818  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   819  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   820  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:39:23
   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 818)
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   832  .  .  .  .  .  .  .  .  .  .  .  .  }
   833  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:39:27
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:39:28
   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ping"
   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:39:33
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Packet"
   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   846  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   847  .  .  .  .  .  .  .  .  .  .  .  .  }
   848  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   849  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   850  .  .  .  .  .  .  .  .  .  .  .  }
   851  .  .  .  .  .  .  .  .  .  .  }
   852  .  .  .  .  .  .  .  .  .  .  Closing: example.go:39:39
   853  .  .  .  .  .  .  .  .  .  }
   854  .  .  .  .  .  .  .  .  .  Results: nil
   855  .  .  .  .  .  .  .  .  }
   856  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   857  .  .  .  .  .  .  .  .  .  Lbrace: example.go:39:41
   858  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   859  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   860  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   861  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:40:3
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:40:7
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   872  .  .  .  .  .  .  .  .  .  .  .  .  }
   873  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:40:13
   874  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {
   875  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:40:14
   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"%d bytes from %s: icmp_seq=%d time=%v\\n\""
   879  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   880  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
   881  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:4
   883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 824)
   885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:8
   888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Nbytes"
   889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   891  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   892  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {
   893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:16
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 824)
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:20
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "IPAddr"
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   903  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   904  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.SelectorExpr {
   905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:28
   907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 824)
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:32
   912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Seq"
   913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   915  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   916  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {
   917  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:37
   919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkt"
   920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 824)
   921  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   922  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   923  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:41:41
   924  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Rtt"
   925  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   926  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   927  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   928  .  .  .  .  .  .  .  .  .  .  .  .  }
   929  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   930  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:41:44
   931  .  .  .  .  .  .  .  .  .  .  .  }
   932  .  .  .  .  .  .  .  .  .  .  }
   933  .  .  .  .  .  .  .  .  .  }
   934  .  .  .  .  .  .  .  .  .  Rbrace: example.go:42:2
   935  .  .  .  .  .  .  .  .  }
   936  .  .  .  .  .  .  .  }
   937  .  .  .  .  .  .  }
   938  .  .  .  .  .  }
   939  .  .  .  .  .  4: *ast.AssignStmt {
   940  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   941  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   942  .  .  .  .  .  .  .  .  X: *ast.Ident {
   943  .  .  .  .  .  .  .  .  .  NamePos: example.go:43:2
   944  .  .  .  .  .  .  .  .  .  Name: "pinger"
   945  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
   946  .  .  .  .  .  .  .  .  }
   947  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   948  .  .  .  .  .  .  .  .  .  NamePos: example.go:43:9
   949  .  .  .  .  .  .  .  .  .  Name: "OnFinish"
   950  .  .  .  .  .  .  .  .  .  Obj: nil
   951  .  .  .  .  .  .  .  .  }
   952  .  .  .  .  .  .  .  }
   953  .  .  .  .  .  .  }
   954  .  .  .  .  .  .  TokPos: example.go:43:18
   955  .  .  .  .  .  .  Tok: =
   956  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   957  .  .  .  .  .  .  .  0: *ast.FuncLit {
   958  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   959  .  .  .  .  .  .  .  .  .  Func: example.go:43:20
   960  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   961  .  .  .  .  .  .  .  .  .  .  Opening: example.go:43:24
   962  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   963  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   964  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   965  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   966  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:43:25
   968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
   969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
   972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 963)
   973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   975  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   976  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   977  .  .  .  .  .  .  .  .  .  .  .  .  }
   978  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   979  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:43:31
   980  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   981  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   982  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:43:32
   983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ping"
   984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:43:37
   988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Statistics"
   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   991  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   992  .  .  .  .  .  .  .  .  .  .  .  .  }
   993  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   994  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   995  .  .  .  .  .  .  .  .  .  .  .  }
   996  .  .  .  .  .  .  .  .  .  .  }
   997  .  .  .  .  .  .  .  .  .  .  Closing: example.go:43:47
   998  .  .  .  .  .  .  .  .  .  }
   999  .  .  .  .  .  .  .  .  .  Results: nil
  1000  .  .  .  .  .  .  .  .  }
  1001  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1002  .  .  .  .  .  .  .  .  .  Lbrace: example.go:43:49
  1003  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {
  1004  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  1005  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1006  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1007  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:44:3
  1009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1012  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:44:7
  1014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
  1015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1016  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1017  .  .  .  .  .  .  .  .  .  .  .  .  }
  1018  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:44:13
  1019  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1020  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:44:14
  1022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\n--- %s ping statistics ---\\n\""
  1024  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1025  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:44:48
  1028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1029  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1030  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:44:54
  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Addr"
  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1037  .  .  .  .  .  .  .  .  .  .  .  .  }
  1038  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1039  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:44:58
  1040  .  .  .  .  .  .  .  .  .  .  .  }
  1041  .  .  .  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {
  1043  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1044  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1045  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:45:3
  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:45:7
  1052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
  1053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1055  .  .  .  .  .  .  .  .  .  .  .  .  }
  1056  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:45:13
  1057  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {
  1058  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:45:14
  1060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"%d packets transmitted, %d packets received, %v%% \t\t\t\tpacket loss\\n\""
  1062  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1063  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:4
  1066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:10
  1071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PacketsSent"
  1072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1074  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {
  1076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:23
  1078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:29
  1083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PacketsRecv"
  1084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1086  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1087  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.SelectorExpr {
  1088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:42
  1090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:48
  1095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PacketLoss"
  1096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1098  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1099  .  .  .  .  .  .  .  .  .  .  .  .  }
  1100  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1101  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:46:58
  1102  .  .  .  .  .  .  .  .  .  .  .  }
  1103  .  .  .  .  .  .  .  .  .  .  }
  1104  .  .  .  .  .  .  .  .  .  .  2: *ast.ExprStmt {
  1105  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1106  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1107  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:47:3
  1109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1111  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1112  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:47:7
  1114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
  1115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1116  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1117  .  .  .  .  .  .  .  .  .  .  .  .  }
  1118  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:47:13
  1119  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {
  1120  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:47:14
  1122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"round-trip min/avg/max/stddev = %v/%v/%v/%v\\n\""
  1124  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1125  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:4
  1128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:10
  1133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "MinRtt"
  1134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1136  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1137  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {
  1138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:18
  1140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:24
  1145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AvgRtt"
  1146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1148  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1149  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.SelectorExpr {
  1150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:32
  1152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:38
  1157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "MaxRtt"
  1158  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1159  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1160  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1161  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {
  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:46
  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stats"
  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 969)
  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:52
  1169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "StdDevRtt"
  1170  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1172  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1173  .  .  .  .  .  .  .  .  .  .  .  .  }
  1174  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1175  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:48:61
  1176  .  .  .  .  .  .  .  .  .  .  .  }
  1177  .  .  .  .  .  .  .  .  .  .  }
  1178  .  .  .  .  .  .  .  .  .  }
  1179  .  .  .  .  .  .  .  .  .  Rbrace: example.go:49:2
  1180  .  .  .  .  .  .  .  .  }
  1181  .  .  .  .  .  .  .  }
  1182  .  .  .  .  .  .  }
  1183  .  .  .  .  .  }
  1184  .  .  .  .  .  5: *ast.AssignStmt {
  1185  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1186  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1187  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1188  .  .  .  .  .  .  .  .  .  NamePos: example.go:51:2
  1189  .  .  .  .  .  .  .  .  .  Name: "pinger"
  1190  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
  1191  .  .  .  .  .  .  .  .  }
  1192  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1193  .  .  .  .  .  .  .  .  .  NamePos: example.go:51:9
  1194  .  .  .  .  .  .  .  .  .  Name: "Count"
  1195  .  .  .  .  .  .  .  .  .  Obj: nil
  1196  .  .  .  .  .  .  .  .  }
  1197  .  .  .  .  .  .  .  }
  1198  .  .  .  .  .  .  }
  1199  .  .  .  .  .  .  TokPos: example.go:51:15
  1200  .  .  .  .  .  .  Tok: =
  1201  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1202  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1203  .  .  .  .  .  .  .  .  ValuePos: example.go:51:17
  1204  .  .  .  .  .  .  .  .  Kind: INT
  1205  .  .  .  .  .  .  .  .  Value: "1"
  1206  .  .  .  .  .  .  .  }
  1207  .  .  .  .  .  .  }
  1208  .  .  .  .  .  }
  1209  .  .  .  .  .  6: *ast.ExprStmt {
  1210  .  .  .  .  .  .  X: *ast.CallExpr {
  1211  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1212  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1213  .  .  .  .  .  .  .  .  .  NamePos: example.go:52:2
  1214  .  .  .  .  .  .  .  .  .  Name: "pinger"
  1215  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
  1216  .  .  .  .  .  .  .  .  }
  1217  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1218  .  .  .  .  .  .  .  .  .  NamePos: example.go:52:9
  1219  .  .  .  .  .  .  .  .  .  Name: "SetPrivileged"
  1220  .  .  .  .  .  .  .  .  .  Obj: nil
  1221  .  .  .  .  .  .  .  .  }
  1222  .  .  .  .  .  .  .  }
  1223  .  .  .  .  .  .  .  Lparen: example.go:52:22
  1224  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1225  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1226  .  .  .  .  .  .  .  .  .  NamePos: example.go:52:23
  1227  .  .  .  .  .  .  .  .  .  Name: "true"
  1228  .  .  .  .  .  .  .  .  .  Obj: nil
  1229  .  .  .  .  .  .  .  .  }
  1230  .  .  .  .  .  .  .  }
  1231  .  .  .  .  .  .  .  Ellipsis: -
  1232  .  .  .  .  .  .  .  Rparen: example.go:52:27
  1233  .  .  .  .  .  .  }
  1234  .  .  .  .  .  }
  1235  .  .  .  .  .  7: *ast.ExprStmt {
  1236  .  .  .  .  .  .  X: *ast.CallExpr {
  1237  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1238  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1239  .  .  .  .  .  .  .  .  .  NamePos: example.go:53:2
  1240  .  .  .  .  .  .  .  .  .  Name: "pinger"
  1241  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
  1242  .  .  .  .  .  .  .  .  }
  1243  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1244  .  .  .  .  .  .  .  .  .  NamePos: example.go:53:9
  1245  .  .  .  .  .  .  .  .  .  Name: "Run"
  1246  .  .  .  .  .  .  .  .  .  Obj: nil
  1247  .  .  .  .  .  .  .  .  }
  1248  .  .  .  .  .  .  .  }
  1249  .  .  .  .  .  .  .  Lparen: example.go:53:12
  1250  .  .  .  .  .  .  .  Args: nil
  1251  .  .  .  .  .  .  .  Ellipsis: -
  1252  .  .  .  .  .  .  .  Rparen: example.go:53:13
  1253  .  .  .  .  .  .  }
  1254  .  .  .  .  .  }
  1255  .  .  .  .  .  8: *ast.SendStmt {
  1256  .  .  .  .  .  .  Chan: *ast.StarExpr {
  1257  .  .  .  .  .  .  .  Star: example.go:54:2
  1258  .  .  .  .  .  .  .  X: *ast.Ident {
  1259  .  .  .  .  .  .  .  .  NamePos: example.go:54:3
  1260  .  .  .  .  .  .  .  .  Name: "result"
  1261  .  .  .  .  .  .  .  .  Obj: *(obj @ 576)
  1262  .  .  .  .  .  .  .  }
  1263  .  .  .  .  .  .  }
  1264  .  .  .  .  .  .  Arrow: example.go:54:10
  1265  .  .  .  .  .  .  Value: *ast.CallExpr {
  1266  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1267  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1268  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:13
  1269  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1270  .  .  .  .  .  .  .  .  .  Obj: nil
  1271  .  .  .  .  .  .  .  .  }
  1272  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1273  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:17
  1274  .  .  .  .  .  .  .  .  .  Name: "Sprint"
  1275  .  .  .  .  .  .  .  .  .  Obj: nil
  1276  .  .  .  .  .  .  .  .  }
  1277  .  .  .  .  .  .  .  }
  1278  .  .  .  .  .  .  .  Lparen: example.go:54:23
  1279  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1280  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1281  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:24
  1282  .  .  .  .  .  .  .  .  .  Name: "i"
  1283  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 615)
  1284  .  .  .  .  .  .  .  .  }
  1285  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1286  .  .  .  .  .  .  .  .  .  ValuePos: example.go:54:27
  1287  .  .  .  .  .  .  .  .  .  Kind: STRING
  1288  .  .  .  .  .  .  .  .  .  Value: "\": \""
  1289  .  .  .  .  .  .  .  .  }
  1290  .  .  .  .  .  .  .  .  2: *ast.CallExpr {
  1291  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1292  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1293  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:33
  1294  .  .  .  .  .  .  .  .  .  .  .  Name: "pinger"
  1295  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 694)
  1296  .  .  .  .  .  .  .  .  .  .  }
  1297  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1298  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:40
  1299  .  .  .  .  .  .  .  .  .  .  .  Name: "Statistics"
  1300  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1301  .  .  .  .  .  .  .  .  .  .  }
  1302  .  .  .  .  .  .  .  .  .  }
  1303  .  .  .  .  .  .  .  .  .  Lparen: example.go:54:50
  1304  .  .  .  .  .  .  .  .  .  Args: nil
  1305  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1306  .  .  .  .  .  .  .  .  .  Rparen: example.go:54:51
  1307  .  .  .  .  .  .  .  .  }
  1308  .  .  .  .  .  .  .  }
  1309  .  .  .  .  .  .  .  Ellipsis: -
  1310  .  .  .  .  .  .  .  Rparen: example.go:54:52
  1311  .  .  .  .  .  .  }
  1312  .  .  .  .  .  }
  1313  .  .  .  .  }
  1314  .  .  .  .  Rbrace: example.go:55:1
  1315  .  .  .  }
  1316  .  .  }
  1317  .  }
  1318  .  Scope: *ast.Scope {
  1319  .  .  Outer: nil
  1320  .  .  Objects: map[string]*ast.Object (len = 2) {
  1321  .  .  .  "chs": *(obj @ 73)
  1322  .  .  .  "main": *(obj @ 103)
  1323  .  .  }
  1324  .  }
  1325  .  Imports: []*ast.ImportSpec (len = 4) {
  1326  .  .  0: *(obj @ 15)
  1327  .  .  1: *(obj @ 26)
  1328  .  .  2: *(obj @ 37)
  1329  .  .  3: *(obj @ 48)
  1330  .  }
  1331  .  Unresolved: []*ast.Ident (len = 23) {
  1332  .  .  0: *(obj @ 86)
  1333  .  .  1: *(obj @ 126)
  1334  .  .  2: *(obj @ 167)
  1335  .  .  3: *(obj @ 261)
  1336  .  .  4: *(obj @ 280)
  1337  .  .  5: *(obj @ 446)
  1338  .  .  6: *(obj @ 479)
  1339  .  .  7: *(obj @ 501)
  1340  .  .  8: *(obj @ 524)
  1341  .  .  9: *(obj @ 624)
  1342  .  .  10: *(obj @ 647)
  1343  .  .  11: *(obj @ 666)
  1344  .  .  12: *(obj @ 719)
  1345  .  .  13: *(obj @ 754)
  1346  .  .  14: *(obj @ 766)
  1347  .  .  15: *(obj @ 836)
  1348  .  .  16: *(obj @ 862)
  1349  .  .  17: *(obj @ 981)
  1350  .  .  18: *(obj @ 1007)
  1351  .  .  19: *(obj @ 1045)
  1352  .  .  20: *(obj @ 1107)
  1353  .  .  21: *(obj @ 1225)
  1354  .  .  22: *(obj @ 1267)
  1355  .  }
  1356  .  Comments: nil
  1357  }